<problem>
  <text>
    <script type="loncapa/python">

# random variables (no need to import random library)


n = random.choice(range(13,16,1))
x = random.choice(range(2,9,1))
y = random.choice(range(x+2,13,1))

# Solutions with variables converted to string
# Make sure you name the solution with part id at the end. e.g. 'solution1' will be solution for part 1.
solution1 = "{0}-1".format(n)
solution2 = "{0}-2".format(n)
solution3 = "({0}-1)*({0}-2)".format(n)
solution4 = "{0} - {1} - 1".format(y, x)
solution5 = "({0}-{1})*({0}-{1}-1)/2".format(n,x)
solution6 = "1 * ({0}-{1})*({0}-{1}-1)/2/(({0}-1)*({0}-2))".format(n,x)


# Group all solutions into a list
solutions = [solution1, solution2, solution3, solution4, solution5, solution6]


# hint text id
hint_text_id = ["cse103fall2016week1problem1part1","cse103fall2016week1problem1part2"]
    </script>

    <script type="text/javascript">
      //fill in number of hint
        var hint_number = 2;

      //fill in hint input box id
        var hintIds = ["input_57ccdc78397649aca59b419c95573254_2_1",
                "input_1ddc9e0c3eea4ba3b61b291a7cfb650d_2_1"];

      //fill in problem input box id
        var proIds = ["input_0463a3ce78dd46429e9e2fcf681616d9_2_1",
               "input_0463a3ce78dd46429e9e2fcf681616d9_3_1"];
               
      //fill in hint text id. Need to match the hint_text_id from above
        var hintTextIds = ["cse103fall2016week1problem1part1",
                  "cse103fall2016week1problem1part2"];
    </script>



<p>Three cards are drawn sequentially from a deck that contains \($n\) cards numbered 1 to \($n\) in an arbitrary order. Suppose the first card drawn is a \($x\), what is the probability that the three cards form an increasing sequence?</p><p>Note that unlike the previous question, we are considering a sequence instead of a set of cards, so the order matters. Define the event of interest, A, as the set of all increasing 3-card sequences, i.e.\[A = \{(x_1,x_2,x_3) | x_1 &lt; x_2 &lt; x_3\} \]</p><p>where \(\{x_1, x_2, x_3\}\) in \(\{1, \cdots, $n\}\). Define event \(B\) as the set of 3-card sequence that starts with \($x\), i.e. \[B = \{(x_1,x_2,x_3) | x_1=$x\} \] or simply  \(B = \{($x,x_2,x_3)\} \)</p><ul><li>How many cards can be selected as \(x_2\) in \(B\) :</li></ul>

    <customresponse cfn="check" expect="\[$solution1\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>How many cards can be selected as \(x_3\) in \(B\) when \(x_2\) is already selected :</li></ul>

    <customresponse cfn="check" expect="\[$solution2\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>What is the size of \(B\) i.e. \(|B| = \)</li></ul>

    <customresponse cfn="check" expect="\[$solution3\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<p>It follows that\[ A \cap B = \{($x,x_2,x_3) | $x &lt; x_2 &lt; x_3\} \]</p><p>This set can be partitioned into subsets according to \(x_3\), where in each subset \(x_3\) is a constant:\[ A \cap B = \cup_{x_3 = $x+2}^{$n}{($x,x_2,x_3)|$x &lt; x_2 &lt; x_3} \]</p><p>Let \(S_{x_3=t}\) represent the subset\[\{($x,x_2,t)|$x &lt; x_2 &lt; t\}\],</p><p>then \[|A \cap B| = \sum_{t = $x+2}^{$n} \left|S_{x_3=t}\right| \].</p><ul><li>To compute each \(\left|S_{x_3=t}\right|\), let's start with a specific case, say,  \(t=$y\),</li></ul><p>\(\left|S_{x_3=$y}\right| = \left| \{($x,x_2,$y)|$x &lt; x_2 &lt; $y\} \right| = \)</p>

    <customresponse cfn="check" expect="\[$solution4\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>Generalize this computation, it should be straightforward to compute \(|A \cap B|\) as the sum of \(S_{x_3=t}\) over all valid \(t\).\(|A \cap B| = \)</li></ul>

    <customresponse cfn="check" expect="\[$solution5\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>


<ul><li>Now we are ready to compute the conditional probability</li></ul><p>\(P(A|B) = \)</p>

    <customresponse cfn="check" expect="\[$solution6\]">
      <textline/>
      <hintgroup hintfn="hint_fn"/>
    </customresponse>



    
    

    

    <script type="loncapa/python">
from hint import evaluate
from hint.get_hint import get_hint

# grader of the problem
def check(expect, ans):
  return evaluate.evaluate(expect, ans)

# hint function
def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
  aid = answer_ids[0]
  ans = str(student_answers[aid])
  i = int(aid[-3])-2

  if ans == "":
    return
  key = new_cmap.keys()[0]
  if new_cmap[key]['correctness'] == "correct":
    return

  hint = get_hint(solutions[i], ans, hint_text_id, i)
  new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>

        
    <script type="text/javascript" src="/static/js/adaptive_hint.js"></script>
    <script type="text/javascript">                             
      for (var i=0; i != hint_number; i++) {
        hide_hint(i);
      }
      show_hint(hint_number);
    </script>

  </text>
</problem>